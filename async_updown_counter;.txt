module async_updown_counter(
    input wire clk,
    input wire reset,
    input wire mod,
    output reg Q0,
    output reg Q1,
    output reg Q2
    );
	  reg [2:0] count;

    always @(posedge clk or posedge reset) begin
        if (reset)
            count <= 3'b000;
        else begin
            if (mod)
                count <= count + 1;   // Count up
            else
                count <= count - 1;   // Count down
        end
    end

    // Output bits
    always @(*) begin
        Q0 = count[0];
        Q1 = count[1];
        Q2 = count[2];
    end
	 



endmodule
